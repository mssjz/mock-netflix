{"version":3,"sources":["jsonData.js","store.js","components/Film/index.js","components/MyList/index.js","components/RecomList/index.js","components/Titles/index.js","App.js","serviceWorker.js","index.js"],"names":["listData","mylist","title","id","img","recommendations","initState","myList","recommends","store","createStore","state","arguments","length","undefined","action","type","film","find","ele","filter","concat","Object","toConsumableArray","targetFilm","newRecommends","window","__REDUX_DEVTOOLS_EXTENSION__","Film","_this","this","_this$props$film","props","react_default","a","createElement","className","src","alt","onClick","handleClick","flag","Component","MyList","map","components_Film","key","removeFilm","connect","dispatch","removeAction","RecomList","recom","addFilm","addAction","Titles","App","components_MyList","components_RecomList","components_Titles","Boolean","location","hostname","match","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.96f81ae6.chunk.js","sourcesContent":["let listData = {\n  'mylist':[\n  {\n  'title': 'Futurama',\n  'id': 1,\n  'img': 'http://cdn1.nflximg.net/webp/7621/3787621.webp'\n  },\n   \n  {\n  'title': 'The Interview',\n  'id': 2,\n  'img': 'http://cdn1.nflximg.net/webp/1381/11971381.webp'\n  },\n   \n  {\n  'title': 'Gilmore Girls',\n  'id': 3,\n  'img': 'http://cdn1.nflximg.net/webp/7451/11317451.webp'\n  }\n  ],\n\n  'recommendations': [\n  {\n  'title': 'Family Guy',\n  'id': 4,\n  'img': 'http://cdn5.nflximg.net/webp/5815/2515815.webp'\n  },\n  \n  {\n  'title': 'The Croods',\n  'id': 5,\n  'img': 'http://cdn3.nflximg.net/webp/2353/3862353.webp'\n  },\n  \n  {\n  'title': 'Friends',\n  'id': 6,\n  'img': 'http://cdn0.nflximg.net/webp/3200/9163200.webp'\n  }\n  ]\n  \n  };\n\n  export default listData;\n   ","import { createStore } from 'redux';\nimport listData from './jsonData';\n\nconst initState = {\n  myList: listData.mylist,\n  recommends: listData.recommendations\n};\n\nexport const removeAction = id => ({\n  type: 'REMOVE_FILM',\n  id\n});\n\nexport const addAction = id => ({\n  type: 'ADD_FILM',\n  id\n});\n\nconst reducer = (state = initState, action) => {\n  switch(action.type) {\n    case 'REMOVE_FILM': \n      let film = state.myList.find(ele => ele.id === action.id);\n      let newList = state.myList.filter(ele => ele.id !== action.id);\n      return {myList: newList, recommends: [...state.recommends, film]};\n    case \"ADD_FILM\":\n      let targetFilm = state.recommends.find(ele => ele.id === action.id);\n      let newRecommends = state.recommends.filter(ele => ele.id !== action.id);\n      return {myList: [...state.myList, targetFilm], recommends: newRecommends};\n    default: \n      return state;\n  }\n}\n\nconst store = createStore(reducer, initState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nexport default store;\n\n","import React, { Component } from 'react';\nclass Film extends Component {\n  render(){\n  const {img, title, id} = this.props.film;\n  return (\n    <div className=\"film\">\n      <img src={img} alt={title}></img>\n      <p>{title}</p>\n      <button className=\"btn\" onClick={() => this.props.handleClick(id)}>{this.props.flag === 'existed' ? 'Remove' : 'Add'}</button>\n    </div>\n  )\n  }\n}\n\nexport default Film;\n\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport {removeAction} from '../../store.js';\nimport Film from '../Film';\n\nclass MyList extends Component {\n  render() {\n    return(\n      <div className=\"savedlist\">\n        <h3>My List</h3>\n        <div className=\"mylist\">\n          {this.props.myList.map(ele => {\n            return <Film key={ele.id} film={ele} handleClick={this.props.removeFilm} flag='existed'/>\n          })}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    myList: state.myList\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return ({\n      removeFilm: (id) => dispatch(removeAction(id))\n  });\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyList);","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport {addAction} from '../../store.js';\nimport Film from '../Film';\n\nclass RecomList extends Component {\n  render() {\n    return(\n      <div className=\"recommdenations\">\n        <h3>Recommendations</h3>\n        <div className=\"recomlist\">\n          {this.props.recom.map(ele => {\n            return <Film key={ele.id} film={ele} handleClick={this.props.addFilm} flag='recom'/>\n          })}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    recom: state.recommends\n  };\n};\n\nconst mapDispatchToProps = dispatch =>  {\n  return ({\n      addFilm: (id) => dispatch(addAction(id))\n  });\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecomList);","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\n\nclass Titles extends Component{\n  render(){\n    return(\n      <div className=\"titles\">\n      <h3>My Films</h3>\n        <ul>\n          {this.props.myList.map(ele => {\n            return <li>{ele.title}</li>\n          })}\n        </ul>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    myList: state.myList\n  };\n};\n\nexport default connect(mapStateToProps)(Titles);","import React, { Component } from 'react';\nimport './App.css';\nimport MyList from './components/MyList';\nimport RecomList from './components/RecomList';\nimport Titles from './components/Titles';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <MyList />\n        <RecomList />\n        <Titles />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport store from './store.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}